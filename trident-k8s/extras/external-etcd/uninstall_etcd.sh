#!/bin/bash

#$ ./uninstall_etcd.sh -h


usage() {
	printf "\nUsage:\n"
	printf " %-20s%s\n" "-n <namespace>" "Specifies the namespace for the etcd cluster; defaults to the current namespace."
	printf " %-20s%s\n" "-k" "Removes all the certificates and keys generated by the installer."
	printf " %-20s%s\n" "-h" "Prints this usage guide."
	printf "\nExample:\n"
	printf " %s\t\t%s\n\n" " ./uninstall_etcd.sh -n trident" "Installs the etcd cluster in namespace \"trident\"."
}

die() {
	usage
	exit 1
}

get_namespace() {
	TMP=$($CMD get serviceaccount default -o json | grep "namespace\":" | awk '{print $2}' | sed 's/,//g; s/"//g')
	echo $TMP
}

get_environment() {
	TMP=$(command -v oc > /dev/null 2>&1)
	if [ $? -ne 0 ]; then
		echo k8s
	else
		echo openshift
	fi
}

get_environment_version() {
	VERSION=$($CMD version | grep "Server Version" | grep -oP '(?<=GitVersion:")[^"]+')
	echo $VERSION
}

# Process arguments
TMP=`getopt -o n:k,h -- "$@"`
if [ $? -ne 0 ]; then
	die
fi
eval set -- "$TMP"
while true ; do
	case "$1" in
		-n)
			NAMESPACE=$2
			shift 2 ;;
		-k)
			REMOVE_CERTS="true"
			shift ;;
		-h)
			usage
			exit 0 ;;
		--) shift ; break ;;
		*)	die ;;
	esac
done

# Check for the requirements
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
ENV=$(get_environment)
if [ "$ENV" == "k8s" ]; then
	CMD="kubectl"
	echo "Installer assumes you have deployed Kubernetes. If this is an OpenShift deployment, make sure 'oc' is in the \$PATH."
else
	CMD="oc"
	echo "Installer assumes you have deployed OpenShift."
fi
command -v $CMD > /dev/null || \
	{ echo >&2 "$0 requires $CMD present in \$PATH."; exit 1; }

# Determine the namespace
if [ -z $NAMESPACE ]; then
	NAMESPACE=$(get_namespace)
	if [ -z "$NAMESPACE" ]; then
		echo >&2 "Failed to determine the current namespace!"; exit 1
	fi
	echo "You are running in namespace $NAMESPACE."
	echo "Cleanup will take place in namespace ${NAMESPACE}."
fi
TMP=$($CMD get namespace $NAMESPACE 2>&1)
if [ "$?" -ne "0" ]; then
	echo "Namespace ${NAMESPACE} doesn't exist!"
	exit 1
fi

# Adjust the namespace
sed -i -r "s/namespace: [a-z0-9]([-a-z0-9]*[a-z0-9])?/namespace: $NAMESPACE/g" kubernetes-yaml/etcd-operator-deployment.yaml
if [ $? -ne 0 ]; then
	exit 1;
fi

# Remove the generated keys and certificates
if [ -n "$REMOVE_CERTS" ]; then
	rm certs/*.pem certs/*.csr
fi

# Remove the installer artifacts
$CMD --namespace=$NAMESPACE delete pod -l app=etcd,etcd_cluster=trident-etcd --ignore-not-found=true
$CMD --namespace=$NAMESPACE delete -f kubernetes-yaml/etcd-cluster.yaml --ignore-not-found=true
$CMD --namespace=$NAMESPACE delete -f kubernetes-yaml/etcd-operator-deployment.yaml --ignore-not-found=true

$CMD --namespace=$NAMESPACE delete secret etcd-client-tls --ignore-not-found=true
$CMD --namespace=$NAMESPACE delete secret etcd-server-tls --ignore-not-found=true
$CMD --namespace=$NAMESPACE delete secret etcd-peer-tls --ignore-not-found=true

$CMD --namespace=$NAMESPACE delete -f kubernetes-yaml/etcd-serviceaccount.yaml --ignore-not-found=true
$CMD --namespace=$NAMESPACE delete -f kubernetes-yaml/etcd-clusterrole-k8s.yaml --ignore-not-found=true
$CMD --namespace=$NAMESPACE delete -f kubernetes-yaml/etcd-clusterrolebinding-k8s.yaml --ignore-not-found=true

